name: Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'  # Spécifiez la version de Java si nécessaire

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build project with alt.gradle
        #        env:
        #          # Make sure you have added a repository secret in the repository's settings
        #          HANGAR_TOKEN: ${{ secrets.HANGAR_API_TOKEN }}
        run: ./gradlew -b alt.gradle shadowJar # publishPluginPublicationToHangar --stacktrace

      - name: Extract version from build.gradle
        id: extract_version
        run: |
          version=$(grep '^version' build.gradle | awk -F'=' '{ print $2 }' | xargs)
          echo "::set-output name=VERSION::$version"

      - name: Get last commit message
        id: get_commit_message
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "::set-output name=COMMIT_MESSAGE::$commit_message"

      #      - name: Rename JAR file with version
      #        run: |
      #          version=${{ steps.extract_version.outputs.VERSION }}
      #          mv ./out/WorldManager-${version}.jar ./out/WorldManager-${version}.jar

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.VERSION }}
          release_name: V${{ steps.extract_version.outputs.VERSION }}
          body: ${{ steps.get_commit_message.outputs.COMMIT_MESSAGE }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/WorldManager-${{ steps.extract_version.outputs.VERSION }}.jar  # Chemin vers le fichier .jar généré
          asset_name: WorldManager-${{ steps.extract_version.outputs.VERSION }}.jar  # Nom du fichier dans la release
          asset_content_type: application/java-archive  # Type de contenu MIME du fichier .jar
